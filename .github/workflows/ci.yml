# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: CI

on:
    push:
        branches: ['dev', 'main']
    pull_request:
        branches: ['dev', 'main']

jobs:
    ci:
        runs-on: windows-latest
        strategy:
            fail-fast: false
        permissions:
            pull-requests: read

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Filter changes
              uses: dorny/paths-filter@v2
              id: filter
              with:
                  filters: |
                      src:
                        - 'src/**'
                        - 'src-tauri/**'
                      typescript:
                        - '**/*.{ts,tsx}'

            - name: Setup node.js 18.x
              uses: actions/setup-node@v4
              with:
                  node-version: 18

            - name: Install pnpm
              uses: pnpm/action-setup@v2
              with:
                  version: 8
                  run_install: false

            - name: Get pnpm store directory
              shell: bash
              run: |
                  echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

            - name: Setup pnpm cache
              uses: actions/cache@v3
              with:
                  path: ${{ env.STORE_PATH }}
                  key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: |
                      ${{ runner.os }}-pnpm-store-

            - name: Install dependencies
              run: pnpm install

            - name: Lint ts files
              if: steps.filter.outputs.typescript == 'true'
              run: pnpm lint

            - name: Setup rust
              if: steps.filter.outputs.src == 'true'
              uses: actions-rust-lang/setup-rust-toolchain@v1

            - name: Setup rust cache
              if: steps.filter.outputs.src == 'true'
              uses: Swatinem/rust-cache@v2
              with:
                  workspaces: './src-tauri -> target'

            - name: Build app
              if: steps.filter.outputs.src == 'true'
              uses: tauri-apps/tauri-action@v0
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
